kind: Service
apiVersion: v1
metadata:
  name: mcs-ping-pong
  namespace: istio-test
  labels:
    app: mcs-ping-pong
  annotations:
    kubesphere.io/creator: ferdinandsu
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: mcs-ping-pong
  clusterIP: None
  type: ClusterIP
  sessionAffinity: None
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mcs-ping-pong
  namespace: istio-test
  labels:
    app: mcs-ping-pong
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubesphere.io/creator: ferdinandsu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcs-ping-pong
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mcs-ping-pong
      annotations:
        kubesphere.io/creator: ferdinandsu
        kubesphere.io/imagepullsecrets: '{}'
        kubesphere.io/restartedAt: '2023-05-16T05:58:26.874Z'
    spec:
      containers:
        - name: mcs-ping-pong
          image: '192.168.1.102:5000/mss-modified/mcspingpong:swagger'
          ports:
            - name: tcp-80
              containerPort: 80
              protocol: TCP
          env:
            - name: APP_URL
              value: 'http://mcs-ping-pong/ping'
            - name: INSTANCE_ID
              value: '119'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
